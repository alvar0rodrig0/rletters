- content_for :breadcrumbs do
  %li= link_to t('breadcrumbs.root'), root_path
  - if user_signed_in? && current_user.workflow_active
    %li= link_to t('breadcrumbs.workflow_start'), workflow_start_path
    %li= link_to t('breadcrumbs.workflow_info'), workflow_info_path(current_user.workflow_class)
    %li= link_to t('breadcrumbs.workflow_activate'), workflow_activate_path(current_user.workflow_class)
  %li.active= t('breadcrumbs.search_index')

.row
  .col-sm-12.col-lg-9
    .row
      .col-sm-8
        = form_tag(search_path, method: :get, role: 'form') do
          - if result.params['fq']
            - [result.params['fq']].flatten.each do |p|
              = hidden_field_tag "fq[]", p
          .form-group
            %label.sr-only{ for: 'q' }= t('.placeholder')
            = search_field_tag :q, (params[:precise] ? t('.adv_search_placeholder') : params[:q]), placeholder: t('.placeholder'), class: 'form-control'

      .col-sm-4
        .btn-group.btn-group-justified{ role: 'group' }
          .btn-group
            = link_to('#', class: 'btn btn-default dropdown-toggle', data: { toggle: 'dropdown' }, role: 'button') do
              = t('.sort')
              %span.caret
            %ul.dropdown-menu{ role: 'menu' }
              - result.sort_methods.each do |(param, desc)|
                %li
                  = link_to search_path(params.merge({ sort: param })) do
                    %span{ style: (param == result.params['sort'] ? nil : 'visibility: hidden') } &check;
                    = desc

          - if user_signed_in?
            = link_to t('.create_dataset'), new_dataset_path(q: result.params['q'], def_type: result.params['defType'], fq: result.params['fq']), class: 'btn btn-success ajax-modal', id: 'create-dataset'
          - else
            = link_to t('.create_dataset'), '#', class: 'btn btn-success disabled'

.row
  .col-sm-12.col-lg-9
    .navbar.navbar-default{ role: 'navigation' }
      .container-fluid
        .navbar-left
          %p.navbar-text= result.num_hits
          .btn-group
            = result.filter_removal_links

    .text-center
      %ul.pagination.top-pagination= result.pagination

    %table.table.table-striped.document-list
      - result.documents.each do |d|
        %tr
          %td
            %abbr{ class: 'unapi-id', title: d.uid }= ''

            .dropdown.pull-right
              %button.btn.btn-default.dropdown-toggle{ type: 'button', id: "drop-#{d.uid.html_id}", data: { toggle: 'dropdown' } }
                = t('.dropdown_button')
                %span.caret
              %ul.dropdown-menu.dropdown-menu-right{ role: 'menu', aria: { labelledby: "drop-#{d.uid.html_id}" } }
                =render partial: 'dropdown', locals: { document: d }

            = d.citation

    .text-center
      %ul.pagination.bottom-pagination= result.pagination

  .col-sm-12.col-lg-3
    .well
      - if result.facets || result.categories
        %h4= t('.filters')

        %ul.nav.nav-pills.nav-stacked.filter-list
          - if result.facets
            = result.facets.addition_links
          - if result.categories
            = result.categories.link_tree

      .btn-group.btn-group-justified
        = link_to t('.advanced_search'), search_advanced_path, class: 'btn btn-default'
