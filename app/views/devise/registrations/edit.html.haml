- content_for :breadcrumbs do
  %li.breadcrumb-item= link_to t('breadcrumbs.root'), root_path
  %li.breadcrumb-item.active= t('breadcrumbs.users_registrations_edit')

%h1= t('.header')
%h4.text-muted= t('.subheader')

.row
  .col-6
    = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, novalidate: true, class: 'needs-validation' }) do |f|
      .form-group
        = f.label :name
        = f.text_field :name, class: 'form-control', required: true, autofocus: true
        .invalid-feedback= validation_errors_for(resource, :name, true)
      .form-group
        = f.label :email
        = f.email_field :email, class: 'form-control', required: true
        .invalid-feedback= validation_errors_for(resource, :email, true)
      .form-group
        = f.label :current_password
        = f.password_field :current_password, class: 'form-control', required: true
        .invalid-feedback= validation_errors_for(resource, :current_password, true, 'devise.registrations.edit.password_blank')

      .card.mb-3
        .card-body
          %h5.card-title= t('.change_password')

          .form-group
            = f.label :password
            = f.password_field :password, class: 'form-control', autocomplete: 'off', placeholder: t('.password_placeholder')
            .invalid-feedback= validation_errors_for(resource, :password)
          .form-group
            = f.label :password_confirmation
            = f.password_field :password_confirmation, class: 'form-control', autocomplete: 'off', placeholder: t('.password_placeholder')
            .invalid-feedback= validation_errors_for(resource, :password_confirmation)

      .card.mb-3
        .card-body
          %h5.card-title= t('.settings')

          .form-group
            = f.label :language
            = f.select :language, options_for_select(I18n.available_locales.translated, resource.language), {}, class: 'form-control'
          .form-group
            = f.label :timezone
            = f.time_zone_select :timezone, nil, { default: resource.timezone }, class: 'form-control'

      = link_to t('.cancel'), registration_path(resource_name), data: { confirm: t('.cancel_confirm') }, method: :delete, class: 'btn btn-danger'
      .float-right
        = f.submit t('.submit'), class: 'btn btn-primary'

.row
  .col-12
    %hr

    %h2= t('.library_links_header')
    %h5.text-muted= t('.library_links_subheader')

    #library-list{ data: { fetch_url: libraries_path } }= render template: 'users/libraries/index', layout: false

.row
  .col-12
    %hr

    %h2= t('.export_data_header')
    %h5.text-muted= t('.export_data_subheader')

    - if current_user.export_archive.attached?
      .btn-group{ role: 'group' }
        = link_to rails_blob_path(current_user.export_archive, disposition: 'attachment'), class: 'btn btn-primary' do
          %i.fas.fa-save
          = t('.export_download')
        = link_to user_export_path, method: :delete, class: 'btn btn-danger' do
          %i.fas.fa-trash
          = t('.export_delete')
    - elsif current_user.can_export?
      = link_to '#', class: 'btn btn-info', data: { toggle: 'modal', target: '#export-request-modal' } do
        %i.fas.fa-cloud-download-alt
        = t('.export_request')
    - else
      %p= t('.export_unavailable')

- if current_user.can_export?
  .modal{ id: 'export-request-modal', tabindex: '-1', role: 'dialog', aria: { hidden: 'true' } }
    .modal-dialog{ role: 'document' }
      .modal-content
        .modal-header
          %h4.modal-title= t('.export_data_header')
          = close_icon(dismiss: 'modal')

        .modal-body
          %p= t('.export_request_text')

        .modal-footer
          %button.btn.btn-secondary{ data: { dismiss: 'modal' } }= t('common.cancel')
          = link_to t('.export_request_button'), user_export_path, class: 'btn btn-primary'
